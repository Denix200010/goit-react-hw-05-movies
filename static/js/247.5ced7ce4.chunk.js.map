{"version":3,"file":"static/js/247.5ced7ce4.chunk.js","mappings":"yNA+BA,UA1Ba,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAgB,mCAAG,WAAOC,GAAP,uFACSC,MAAM,sCAAD,OAAuCD,EAAvC,4BAP/B,mCAO+B,oBADd,cACfE,EADe,yBAEdA,EAAgBC,QAFF,2CAAH,sDAItBJ,EAAiBN,GAASW,MAAK,SAAAC,GAC3BR,GAAe,OAAIQ,EAAIC,MAC1B,GACJ,GAAE,CAACb,KAEG,+BACH,wBACKG,EAAYW,KAAI,SAAAC,GACb,OAAO,2BACH,gBAAKC,IAAKD,EAAUE,aAAV,yCAA0DF,EAAUE,cAAiB,oCAAqCC,IAAKH,EAAUI,KAAMC,MAAM,SAC/J,uCAAeL,EAAUA,cACzB,kCAAUA,EAAUI,UAHRJ,EAAUM,QAK7B,OAGZ,C,sBC7BD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOpB,KAAKe,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst API_KEY = '9ed87961dbb9b8beebb5f02b4b9b3eb3';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [currentCast, setCurrentCast] = useState([]);\n    useEffect(() => {\n        const fetchCurrentCast = async (id) => {\n            const findCurrentCast = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n            return findCurrentCast.json();\n        }\n        fetchCurrentCast(movieId).then(res => {\n            setCurrentCast([...res.cast]);\n        })\n    }, [movieId])\n\n    return <>\n        <ul>\n            {currentCast.map(character => {\n                return <li key={character.cast_id}>\n                    <img src={character.profile_path? `https://image.tmdb.org/t/p/w500${character.profile_path}` : '//i.work.ua/career_guide/59_b.png'} alt={character.name} width='200' />\n                    <p>Character: {character.character}</p>\n                    <p>Name: {character.name}</p>\n                </li>\n            })}\n    </ul>\n    </>\n}\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","currentCast","setCurrentCast","useEffect","fetchCurrentCast","id","fetch","findCurrentCast","json","then","res","cast","map","character","src","profile_path","alt","name","width","cast_id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}